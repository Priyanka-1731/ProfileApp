

name: Backend Build & Deploy

on:
  push:
    branches: [main] 
    paths:
      - "backend/**"
  workflow_dispatch:


jobs:
  build-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    - name: Login to AWS ECR
      run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | \
          docker login --username AWS --password-stdin ${{ secrets.BACKEND_ECR_REGISTRY }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and Push Backend Image
      run: |
          docker build -t ${{ secrets.BACKEND_ECR_REGISTRY }}/${{ secrets.BACKEND_ECR_REPOSITORY }}:v1 backend/
          docker push ${{ secrets.BACKEND_ECR_REGISTRY }}/${{ secrets.BACKEND_ECR_REPOSITORY }}:v1
          docker image prune -af




  deploy:
    needs: build-push
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Copy docker-compose to EC2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "docker-compose.yml"
        target: "./"
        overwrite: true

    - name: Deploy Backend to Server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          
          # Set environment variables for docker-compose
          export MONGO_URI="mongodb://admin:admin123@mongo:27017/"
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          export AWS_REGION=${{ secrets.AWS_REGION }}
          export S3_BUCKET_NAME="s3-image-uploader-priya"

          # Login to ECR
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.BACKEND_ECR_REGISTRY }}
          docker pull ${{ secrets.BACKEND_ECR_REGISTRY }}/${{ secrets.BACKEND_ECR_REPOSITORY }}:v1

          docker-compose down
          docker-compose up -d 
          docker image prune -f
